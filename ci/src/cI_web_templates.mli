(** Generate HTML for the various pages in the UI. *)

type t = private {
  name : string;
  state_repo : Uri.t option;
  can_read : CI_ACL.t;
  can_build : CI_ACL.t;
}

type logs =
  [ `Live_log of string * string option
  | `No_log
  | `Pair of logs * logs
  | `Saved_log of string * string * string ]

val config :
  ?name:string ->
  ?state_repo:Uri.t ->
  can_read:CI_ACL.t ->
  can_build:CI_ACL.t ->
  unit -> t
(** [config ~name ~state_repo ()] is a web configuration.
    If [name] is given, it is used as the main heading, and also as the name of the session cookie
    (useful if you run multiple CIs on the same host, on different ports).
    If [state_repo] is given, it is used to construct links to the state repository on GitHub. *)

val pr_url : CI_projectID.t -> int -> string
(** [pr_url project pr] is a link to the page for [pr]. *)

val ref_url : CI_projectID.t -> Datakit_path.t -> string
(** [ref_url project ref] is a link to the page for [ref]. *)

val unescape_ref : string -> Datakit_path.t
(** [unescape_ref s] decodes a percent-encoded query parameter previously generated by these templates. *)

type page = user:string option -> [`Html] Tyxml.Html.elt

module Error : sig
  type t

  val permission_denied : t

  val uri_path : t -> string
  (** Path to redirect users to to see this error. *)

  val uri : t -> Uri.t
  (** [uri t] is [Uri.of_string (uri_path t)] *)
end

val login_page :
  ?github:Uri.t ->
  csrf_token:string ->
  t ->
  page

val user_page :
  csrf_token:string ->
  t ->
  page

val main_page :
  csrf_token:string ->
  ci:CI_engine.t ->
  dashboards:CI_target.ID_Set.t CI_projectID.Map.t ->
  t ->
  page

val prs_page :
  ci:CI_engine.t ->
  t ->
  page

val branches_page :
  ci:CI_engine.t ->
  t ->
  page

val tags_page :
  ci:CI_engine.t ->
  t ->
  page

val pr_page :
  csrf_token:string ->
  target:CI_engine.target ->
  (CI_engine.job * logs) list ->
  t ->
  page

val ref_page :
  csrf_token:string ->
  target:CI_engine.target ->
  (CI_engine.job * logs) list ->
  t ->
  page

val error_page :
  string ->
  t ->
  page
